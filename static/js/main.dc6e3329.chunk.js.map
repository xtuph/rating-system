{"version":3,"sources":["GlobalStore.js","assets/star_black_24dp.svg","assets/star_outline_black_24dp.svg","screens/RatingScreen.js","screens/HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["defaultGlobalState","ratings","GlobalStoreContext","createContext","useGlobalStore","useContext","GlobalStoreProvider","children","useReducer","state","newValue","dispatch","Provider","value","messages","0","1","2","3","4","noRating","ratingNames","5","allRatings","RatingScreen","props","useState","rating","setRating","hover","setHover","screen","setScreen","showNoRatingMessage","setShowNoRatingMessage","message","noRatingMessage","prevRatings","isLastScreen","avg","total","i","length","className","to","onClick","push","src","star_black_24dp","star_outline_black_24dp","alt","onMouseEnter","onMouseLeave","type","HomeScreen","avgRating","toFixed","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc6e3329.chunk.js","sourcesContent":["import { useContext, createContext, useReducer } from \"react\";\n\n// variable to store everything\n// this is where the previous ratings will be store\nconst defaultGlobalState = {\n  ratings: []\n};\n\nconst GlobalStoreContext = createContext(defaultGlobalState);\n\nexport const useGlobalStore = () => useContext(GlobalStoreContext);\n\nexport const GlobalStoreProvider = ({children}) => {\n  const [state, dispatch] = useReducer(\n    (state, newValue) => ({...state, ...newValue}),\n    defaultGlobalState\n  );\n\n  return (\n    <GlobalStoreContext.Provider value={[state, dispatch]}>\n      {children}\n    </GlobalStoreContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/star_black_24dp.ecf2636e.svg\";","export default __webpack_public_path__ + \"static/media/star_outline_black_24dp.6bc663d6.svg\";","import '../App.css';\nimport { useState } from 'react';\nimport { useGlobalStore } from '../GlobalStore';\nimport star_black_24dp from '../assets/star_black_24dp.svg';\nimport star_outline_black_24dp from '../assets/star_outline_black_24dp.svg';\nimport { Link } from \"react-router-dom\";\n\n// 0: 'experience'\n// 1: 'communication'\n// 2: 'accuracy'\n// 3: 'timeliness'\n// 4: 'stewardship'\nconst messages = {\n  0: \"Please rate your overall experience you had with your booking.\",\n  1: \"Did this person use clear language and explain exactly what they were requesting? Are they responding to follow-up questions in a timely manner?\",\n  2: \"Did this person accurately describe what they were planning to do during land access? Was the party size correct or exceeded? Did they undertake activities they did not specify in the request?\",\n  3: \"Did this user keep to the timelines of the access request? Did they check-in and check out at the appropriate time?\",\n  4: \"How did this recreational user leave things on your land after the trip? Were instructions followed? Did they cause damage and leave a mess or did they clean up after themselves?\",\n  noRating: \"Please select a rating!\",\n}\n\nconst ratingNames = {\n  0: \"Experience\",\n  1: \"Communication\",\n  2: \"Accuracy\",\n  3: \"Timeliness\",\n  4: \"Stewardship\",\n  5: \"Summary\",\n}\n\n// store 5 rating inputs from user\nconst allRatings = [];\n\n// rating screen that asks for 5 different rating inputs for booking from user\nexport const RatingScreen = (props) => {\n  // declare state variables\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [screen, setScreen] = useState(0);\n  const [showNoRatingMessage, setShowNoRatingMessage] = useState(false);\n  const [state, dispatch] = useGlobalStore();\n\n  // get the current mess/question for the current screen\n  const message = messages[screen];\n  // set no rating message if user does not select a rating before clicking next\n  const noRatingMessage = showNoRatingMessage ? messages.noRating : \"\";\n\n  // get the previously store ratings\n  const prevRatings = state.ratings;\n\n  // determine if it is the last screen (summary screen)\n  const isLastScreen = screen >= 5 ? true : false;\n\n  // calculate the average of the 5 ratings if it is the last screen\n  let avg = 0;\n  if (isLastScreen) {\n    let total = 0;\n    for (var i = 0; i < allRatings.length; i++){\n      total += allRatings[i]\n    }\n    avg = total/allRatings.length;\n  }\n\n  return (\n    <div>\n       <h1>Rate your experience</h1>   \n       <h2>{ratingNames[screen]}</h2>     \n        {isLastScreen ? (\n          <div>\n            <div className=\"rating-row\">\n              <div>{ratingNames[0]}</div>\n              <div>{allRatings[0]}</div>\n            </div>\n            <div className=\"rating-row\">\n              <div>{ratingNames[1]}</div>\n              <div>{allRatings[1]}</div>\n            </div>\n            <div className=\"rating-row\">\n              <div>{ratingNames[2]}</div>\n              <div>{allRatings[2]}</div>\n            </div>\n            <div className=\"rating-row\">\n              <div>{ratingNames[3]}</div>\n              <div>{allRatings[3]}</div>\n            </div>\n            <div className=\"rating-row\">\n              <div>{ratingNames[4]}</div>\n              <div>{allRatings[4]}</div>\n            </div>\n            <div className=\"btn-row\">\n              <Link to=\"/\"><button className=\"btn\" onClick={() => {\n                prevRatings.push(avg)\n                dispatch({ratings: prevRatings})\n                }}>SUBMIT</button></Link>\n            </div>\n          </div>\n          \n        ) : (\n          <div>\n            <p className=\"message\">{message}</p>\n            <div className=\"star-row\">\n              <img src={rating >= 1 ? star_black_24dp : (hover >= 1 ? star_black_24dp : star_outline_black_24dp)} alt=\"star1\" className=\"star\" onClick={() => setRating(1)} onMouseEnter={() => setHover(1)} onMouseLeave={() => setHover(0)}/>\n              <img src={rating >= 2 ? star_black_24dp : (hover >= 2 ? star_black_24dp : star_outline_black_24dp)} alt=\"star2\" className=\"star\" onClick={() => setRating(2)} onMouseEnter={() => setHover(2)} onMouseLeave={() => setHover(0)}/>\n              <img src={rating >= 3 ? star_black_24dp : (hover >= 3 ? star_black_24dp : star_outline_black_24dp)} alt=\"star3\" className=\"star\" onClick={() => setRating(3)} onMouseEnter={() => setHover(3)} onMouseLeave={() => setHover(0)}/>\n              <img src={rating >= 4 ? star_black_24dp : (hover >= 4 ? star_black_24dp : star_outline_black_24dp)} alt=\"star4\" className=\"star\" onClick={() => setRating(4)} onMouseEnter={() => setHover(4)} onMouseLeave={() => setHover(0)}/>\n              <img src={rating >= 5 ? star_black_24dp : (hover >= 5 ? star_black_24dp : star_outline_black_24dp)} alt=\"star5\" className=\"star\" onClick={() => setRating(5)} onMouseEnter={() => setHover(5)} onMouseLeave={() => setHover(0)}/>\n            </div>\n            <p>{noRatingMessage}</p>\n            <div className=\"btn-row\">\n              <button type=\"button\" className=\"btn\" onClick={() => {\n                if (rating > 0) {\n                  allRatings.push(rating);\n                  setScreen(screen+1);\n                  setRating(0);\n                  setShowNoRatingMessage(false);\n                } else {\n                  setShowNoRatingMessage(true);\n                }\n                }}>NEXT</button>\n            </div>\n          </div>\n        )} \n    </div>\n  );\n}\n","import '../App.css';\nimport { Link } from \"react-router-dom\";\nimport { useGlobalStore } from '../GlobalStore';\n\n// used for booking page with button to add a review\nexport const HomeScreen = () => {\n  // declare state variables\n  const [state, dispatch] = useGlobalStore();\n  // get all ratings which are stored in the global state variable\n  const ratings = state.ratings;\n\n  // calculate average of all ratings given to this booking\n  var total = 0;\n  for (var i = 0; i < ratings.length; i++){\n    total += ratings[i]\n  }\n  const avgRating = total/ratings.length;\n\n  // return component with title \"booking\" and the average rating plus number of ratings\n  return (\n    <div>\n      <h1>Booking</h1>\n      <p>{avgRating ? avgRating.toFixed(1) : 0}/5 stars ({ratings.length} ratings)</p>\n      <div className=\"btn-row\">\n        <Link to=\"/rating\"><button className=\"btn\">RATE</button></Link>\n      </div>\n    </div>\n  )\n}\n","import './App.css';\nimport { RatingScreen } from './screens/RatingScreen';\nimport { HomeScreen } from './screens/HomeScreen';\nimport { GlobalStoreProvider } from './GlobalStore';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// main app\n// added a global store to store some ratings\n// added a router to switch between booking/home component and the rating component\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <GlobalStoreProvider>\n        <Router>\n          <Switch>\n            <Route path=\"/rating\">\n              <RatingScreen/>\n            </Route>\n            <Route path=\"/\">\n              <HomeScreen/>\n            </Route>\n          </Switch>\n        </Router>\n      </GlobalStoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}